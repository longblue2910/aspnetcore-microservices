{
  "GlobalConfiguration": {
    "BaseUrl": "http://apigw.ocelot"
  },
  "Routes": [
    //Customer api: http://localhost:5003/api/customers
    {
      "UpstreamPathTemplate": "/customers/{username}",
      "UpstreamHttpMethod": [
        "GET"
      ],
      "DownstreamPathTemplate": "/api/customers/{username}",
      "DownstreamScheme": "http",
      "DownstreamHostAndPorts": [
        {
          "Host": "host.docker.internal",
          "Port": "6003"
        }
      ]
    },
    //Product api: http://localhost:5002/api/products
    {
      "UpstreamPathTemplate": "/products/{any}",
      "UpstreamHttpMethod": [
        "GET"
      ],
      "DownstreamPathTemplate": "/api/products/{any}",
      "DownstreamScheme": "http",
      "DownstreamHostAndPorts": [
        {
          "Host": "host.docker.internal",
          "Port": "6002"
        }
      ]
    },
    {
      "UpstreamPathTemplate": "/products/{any}",
      "UpstreamHttpMethod": [
        "PUT",
        "DELETE"
      ],
      "DownstreamPathTemplate": "/api/products/{any}",
      "DownstreamScheme": "http",
      "DownstreamHostAndPorts": [
        {
          "Host": "host.docker.internal",
          "Port": "6002"
        }
      ],
      "AuthenticationOptions": {
        "AuthenticationProviderKey": "Bearer",
        "AllowedScopes": []
      },
      "RouteClaimsRequirement": {
        "Role": "Admin"
      }
    },
    {
      "UpstreamPathTemplate": "/products",
      "UpstreamHttpMethod": [
        "POST"
      ],
      "DownstreamPathTemplate": "/api/products",
      "DownstreamScheme": "http",
      "DownstreamHostAndPorts": [
        {
          "Host": "host.docker.internal",
          "Port": "6002"
        }
      ],
      "RateLimitOptions": {
        "ClientWhitelist": [], //the client in this array will not be affected by the rate limit,
        "EnableRateLimiting": true,
        "Period": "2s", //1s, 5m, 1h, 1d
        "PeriodTimespan": 1, //retry after a certain number of seconds,
        "Limit": 1 //the maximum number of request that a client can make in a defined period
      },
      "QoS": {
        "ExceptionAllowedBeforeBreaking": 2, //if the service does not response for 2 seconds, it will throw timeout exception.
        "DurationOfBreak": 1000,
        "TimeoutValue": 5000 //if the service throw a second exception, the service will not be accessible for five seconds.
      }
    },
    {
      "UpstreamPathTemplate": "/products",
      "UpstreamHttpMethod": [
        "GET"
      ],
      "DownstreamPathTemplate": "/api/products",
      "DownstreamScheme": "http",
      "DownstreamHostAndPorts": [
        {
          "Host": "host.docker.internal",
          "Port": "6002"
        }
      ],
      "RateLimitOptions": {
        "ClientWhitelist": [], //the client in this array will not be affected by the rate limit,
        "EnableRateLimiting": true,
        "Period": "2s", //1s, 5m, 1h, 1d
        "PeriodTimespan": 1, //retry after a certain number of seconds,
        "Limit": 1 //the maximum number of request that a client can make in a defined period
      },
      "QoS": {
        "ExceptionAllowedBeforeBreaking": 2, //if the service does not response for 2 seconds, it will throw timeout exception.
        "DurationOfBreak": 1000,
        "TimeoutValue": 5000 //if the service throw a second exception, the service will not be accessible for five seconds.
      },
      "FileCacheOptions": {
        "TtlOptions": 15 // cached seconds
      }
    },
    {
      "UpstreamPathTemplate": "/products/get-product-by-no/{any}",
      "UpstreamHttpMethod": [
        "GET"
      ],
      "DownstreamPathTemplate": "/api/products/get-product-by-no/{any}",
      "DownstreamScheme": "http",
      "DownstreamHostAndPorts": [
        {
          "Host": "host.docker.internal",
          "Port": "6002"
        }
      ]
    },
    //Basket api: http://localhost:5004/api/Basket
    {
      "UpstreamPathTemplate": "/Basket/{username}",
      "UpstreamHttpMethod": [
        "GET",
        "DELETE"
      ],
      "DownstreamPathTemplate": "/api/Basket/{username}",
      "DownstreamScheme": "http",
      "DownstreamHostAndPorts": [
        {
          "Host": "host.docker.internal",
          "Port": "6004"
        }
      ]
    },
    {
      "UpstreamPathTemplate": "/Basket",
      "UpstreamHttpMethod": [
        "POST"
      ],
      "DownstreamPathTemplate": "/api/Basket",
      "DownstreamScheme": "http",
      "DownstreamHostAndPorts": [
        {
          "Host": "host.docker.internal",
          "Port": "6004"
        }
      ]
    },
    {
      "UpstreamPathTemplate": "/Basket/checkout",
      "UpstreamHttpMethod": [
        "POST"
      ],
      "DownstreamPathTemplate": "/api/Basket/checkout",
      "DownstreamScheme": "http",
      "DownstreamHostAndPorts": [
        {
          "Host": "host.docker.internal",
          "Port": "6004"
        }
      ]
    },
    //Order api: http://localhost:5005/api/{version}/orders
    {
      "UpstreamPathTemplate": "/{version}/orders/{any}",
      "UpstreamHttpMethod": [
        "GET"
      ],
      "DownstreamPathTemplate": "/api/{version}/orders/{any}",
      "DownstreamScheme": "http",
      "DownstreamHostAndPorts": [
        {
          "Host": "host.docker.internal",
          "Port": "6005"
        }
      ]
    },
    {
      "UpstreamPathTemplate": "/{version}/orders",
      "UpstreamHttpMethod": [
        "POST",
        "PUT",
        "DELETE"
      ],
      "DownstreamPathTemplate": "/api/{version}/orders",
      "DownstreamScheme": "http",
      "DownstreamHostAndPorts": [
        {
          "Host": "host.docker.internal",
          "Port": "6005"
        }
      ]
    },
    //Inventory api: http://localhost:5006/api/{version}/inventory
    {
      "UpstreamPathTemplate": "/inventory/items/{any}",
      "UpstreamHttpMethod": [
        "GET"
      ],
      "DownstreamPathTemplate": "/api/inventory/items/{any}",
      "DownstreamScheme": "http",
      "DownstreamHostAndPorts": [
        {
          "Host": "host.docker.internal",
          "Port": "6006"
        }
      ]
    },
    {
      "UpstreamPathTemplate": "/inventory/items/{any}/paging",
      "UpstreamHttpMethod": [
        "GET"
      ],
      "DownstreamPathTemplate": "/api/inventory/items/{any}/paging",
      "DownstreamScheme": "http",
      "DownstreamHostAndPorts": [
        {
          "Host": "host.docker.internal",
          "Port": "6006"
        }
      ]
    },
    {
      "UpstreamPathTemplate": "/inventory/{any}",
      "UpstreamHttpMethod": [
        "DELETE"
      ],
      "DownstreamPathTemplate": "/api/inventory/{any}",
      "DownstreamScheme": "http",
      "DownstreamHostAndPorts": [
        {
          "Host": "host.docker.internal",
          "Port": "6006"
        }
      ]
    },
    {
      "UpstreamPathTemplate": "/inventory/purchase/{any}",
      "UpstreamHttpMethod": [
        "POST"
      ],
      "DownstreamPathTemplate": "/api/inventory/purchase/{any}",
      "DownstreamScheme": "http",
      "DownstreamHostAndPorts": [
        {
          "Host": "host.docker.internal",
          "Port": "6006"
        }
      ]
    }
  ]
}